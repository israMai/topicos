tabela = [
[5.1,3.5,1.4,0.2,"Iris-setosa"],
[4.9,3.0,1.4,0.2,"Iris-setosa"],
[4.7,3.2,1.3,0.2,"Iris-setosa"],
[4.6,3.1,1.5,0.2,"Iris-setosa"],
[5.0,3.6,1.4,0.2,"Iris-setosa"],
[5.4,3.9,1.7,0.4,"Iris-setosa"],
[4.6,3.4,1.4,0.3,"Iris-setosa"],
[5.0,3.4,1.5,0.2,"Iris-setosa"],
[4.4,2.9,1.4,0.2,"Iris-setosa"],
[4.9,3.1,1.5,0.1,"Iris-setosa"],
[5.4,3.7,1.5,0.2,"Iris-setosa"],
[4.8,3.4,1.6,0.2,"Iris-setosa"],
[4.8,3.0,1.4,0.1,"Iris-setosa"],
[4.3,3.0,1.1,0.1,"Iris-setosa"],
[5.8,4.0,1.2,0.2,"Iris-setosa"],
[5.7,4.4,1.5,0.4,"Iris-setosa"],
[5.4,3.9,1.3,0.4,"Iris-setosa"],
[5.1,3.5,1.4,0.3,"Iris-setosa"],
[5.7,3.8,1.7,0.3,"Iris-setosa"],
[5.1,3.8,1.5,0.3,"Iris-setosa"],
[5.4,3.4,1.7,0.2,"Iris-setosa"],
[5.1,3.7,1.5,0.4,"Iris-setosa"],
[4.6,3.6,1.0,0.2,"Iris-setosa"],
[5.1,3.3,1.7,0.5,"Iris-setosa"],
[4.8,3.4,1.9,0.2,"Iris-setosa"],
[5.0,3.0,1.6,0.2,"Iris-setosa"],
[5.0,3.4,1.6,0.4,"Iris-setosa"],
[5.2,3.5,1.5,0.2,"Iris-setosa"],
[5.2,3.4,1.4,0.2,"Iris-setosa"],
[4.7,3.2,1.6,0.2,"Iris-setosa"],
[4.8,3.1,1.6,0.2,"Iris-setosa"],
[5.4,3.4,1.5,0.4,"Iris-setosa"],
[5.2,4.1,1.5,0.1,"Iris-setosa"],
[5.5,4.2,1.4,0.2,"Iris-setosa"],
[4.9,3.1,1.5,0.1,"Iris-setosa"],
[5.0,3.2,1.2,0.2,"Iris-setosa"],
[5.5,3.5,1.3,0.2,"Iris-setosa"],
[4.9,3.1,1.5,0.1,"Iris-setosa"],
[4.4,3.0,1.3,0.2,"Iris-setosa"],
[5.1,3.4,1.5,0.2,"Iris-setosa"],
[5.0,3.5,1.3,0.3,"Iris-setosa"],
[4.5,2.3,1.3,0.3,"Iris-setosa"],
[4.4,3.2,1.3,0.2,"Iris-setosa"],
[5.0,3.5,1.6,0.6,"Iris-setosa"],
[5.1,3.8,1.9,0.4,"Iris-setosa"],
[4.8,3.0,1.4,0.3,"Iris-setosa"],
[5.1,3.8,1.6,0.2,"Iris-setosa"],
[4.6,3.2,1.4,0.2,"Iris-setosa"],
[5.3,3.7,1.5,0.2,"Iris-setosa"],
[5.0,3.3,1.4,0.2,"Iris-setosa"],
[7.0,3.2,4.7,1.4,"Iris-versicolor"],
[6.4,3.2,4.5,1.5,"Iris-versicolor"],
[6.9,3.1,4.9,1.5,"Iris-versicolor"],
[5.5,2.3,4.0,1.3,"Iris-versicolor"],
[6.5,2.8,4.6,1.5,"Iris-versicolor"],
[5.7,2.8,4.5,1.3,"Iris-versicolor"],
[6.3,3.3,4.7,1.6,"Iris-versicolor"],
[4.9,2.4,3.3,1.0,"Iris-versicolor"],
[6.6,2.9,4.6,1.3,"Iris-versicolor"],
[5.2,2.7,3.9,1.4,"Iris-versicolor"],
[5.0,2.0,3.5,1.0,"Iris-versicolor"],
[5.9,3.0,4.2,1.5,"Iris-versicolor"],
[6.0,2.2,4.0,1.0,"Iris-versicolor"],
[6.1,2.9,4.7,1.4,"Iris-versicolor"],
[5.6,2.9,3.6,1.3,"Iris-versicolor"],
[6.7,3.1,4.4,1.4,"Iris-versicolor"],
[5.6,3.0,4.5,1.5,"Iris-versicolor"],
[5.8,2.7,4.1,1.0,"Iris-versicolor"],
[6.2,2.2,4.5,1.5,"Iris-versicolor"],
[5.6,2.5,3.9,1.1,"Iris-versicolor"],
[5.9,3.2,4.8,1.8,"Iris-versicolor"],
[6.1,2.8,4.0,1.3,"Iris-versicolor"],
[6.3,2.5,4.9,1.5,"Iris-versicolor"],
[6.1,2.8,4.7,1.2,"Iris-versicolor"],
[6.4,2.9,4.3,1.3,"Iris-versicolor"],
[6.6,3.0,4.4,1.4,"Iris-versicolor"],
[6.8,2.8,4.8,1.4,"Iris-versicolor"],
[6.7,3.0,5.0,1.7,"Iris-versicolor"],
[6.0,2.9,4.5,1.5,"Iris-versicolor"],
[5.7,2.6,3.5,1.0,"Iris-versicolor"],
[5.5,2.4,3.8,1.1,"Iris-versicolor"],
[5.5,2.4,3.7,1.0,"Iris-versicolor"],
[5.8,2.7,3.9,1.2,"Iris-versicolor"],
[6.0,2.7,5.1,1.6,"Iris-versicolor"],
[5.4,3.0,4.5,1.5,"Iris-versicolor"],
[6.0,3.4,4.5,1.6,"Iris-versicolor"],
[6.7,3.1,4.7,1.5,"Iris-versicolor"],
[6.3,2.3,4.4,1.3,"Iris-versicolor"],
[5.6,3.0,4.1,1.3,"Iris-versicolor"],
[5.5,2.5,4.0,1.3,"Iris-versicolor"],
[5.5,2.6,4.4,1.2,"Iris-versicolor"],
[6.1,3.0,4.6,1.4,"Iris-versicolor"],
[5.8,2.6,4.0,1.2,"Iris-versicolor"],
[5.0,2.3,3.3,1.0,"Iris-versicolor"],
[5.6,2.7,4.2,1.3,"Iris-versicolor"],
[5.7,3.0,4.2,1.2,"Iris-versicolor"],
[5.7,2.9,4.2,1.3,"Iris-versicolor"],
[6.2,2.9,4.3,1.3,"Iris-versicolor"],
[5.1,2.5,3.0,1.1,"Iris-versicolor"],
[5.7,2.8,4.1,1.3,"Iris-versicolor"],
[6.3,3.3,6.0,2.5,"Iris-virginica"],
[5.8,2.7,5.1,1.9,"Iris-virginica"],
[7.1,3.0,5.9,2.1,"Iris-virginica"],
[6.3,2.9,5.6,1.8,"Iris-virginica"],
[6.5,3.0,5.8,2.2,"Iris-virginica"],
[7.6,3.0,6.6,2.1,"Iris-virginica"],
[4.9,2.5,4.5,1.7,"Iris-virginica"],
[7.3,2.9,6.3,1.8,"Iris-virginica"],
[6.7,2.5,5.8,1.8,"Iris-virginica"],
[7.2,3.6,6.1,2.5,"Iris-virginica"],
[6.5,3.2,5.1,2.0,"Iris-virginica"],
[6.4,2.7,5.3,1.9,"Iris-virginica"],
[6.8,3.0,5.5,2.1,"Iris-virginica"],
[5.7,2.5,5.0,2.0,"Iris-virginica"],
[5.8,2.8,5.1,2.4,"Iris-virginica"],
[6.4,3.2,5.3,2.3,"Iris-virginica"],
[6.5,3.0,5.5,1.8,"Iris-virginica"],
[7.7,3.8,6.7,2.2,"Iris-virginica"],
[7.7,2.6,6.9,2.3,"Iris-virginica"],
[6.0,2.2,5.0,1.5,"Iris-virginica"],
[6.9,3.2,5.7,2.3,"Iris-virginica"],
[5.6,2.8,4.9,2.0,"Iris-virginica"],
[7.7,2.8,6.7,2.0,"Iris-virginica"],
[6.3,2.7,4.9,1.8,"Iris-virginica"],
[6.7,3.3,5.7,2.1,"Iris-virginica"],
[7.2,3.2,6.0,1.8,"Iris-virginica"],
[6.2,2.8,4.8,1.8,"Iris-virginica"],
[6.1,3.0,4.9,1.8,"Iris-virginica"],
[6.4,2.8,5.6,2.1,"Iris-virginica"],
[7.2,3.0,5.8,1.6,"Iris-virginica"],
[7.4,2.8,6.1,1.9,"Iris-virginica"],
[7.9,3.8,6.4,2.0,"Iris-virginica"],
[6.4,2.8,5.6,2.2,"Iris-virginica"],
[6.3,2.8,5.1,1.5,"Iris-virginica"],
[6.1,2.6,5.6,1.4,"Iris-virginica"],
[7.7,3.0,6.1,2.3,"Iris-virginica"],
[6.3,3.4,5.6,2.4,"Iris-virginica"],
[6.4,3.1,5.5,1.8,"Iris-virginica"],
[6.0,3.0,4.8,1.8,"Iris-virginica"],
[6.9,3.1,5.4,2.1,"Iris-virginica"],
[6.7,3.1,5.6,2.4,"Iris-virginica"],
[6.9,3.1,5.1,2.3,"Iris-virginica"],
[5.8,2.7,5.1,1.9,"Iris-virginica"],
[6.8,3.2,5.9,2.3,"Iris-virginica"],
[6.7,3.3,5.7,2.5,"Iris-virginica"],
[6.7,3.0,5.2,2.3,"Iris-virginica"],
[6.3,2.5,5.0,1.9,"Iris-virginica"],
[6.5,3.0,5.2,2.0,"Iris-virginica"],
[6.2,3.4,5.4,2.3,"Iris-virginica"],
[5.9,3.0,5.1,1.8,"Iris-virginica"]]
 
def distanciaEuclidiana(a,b):
    from math import sqrt # Importa somente função para cálculo da raiz quadrada
    d = 0
    for i,j in zip(a,b):
        d+= (i-j)**2  # Calcula a distancia euclidiana
    return sqrt(d) # Retorna o resultado da raiz quadrada da distancia
 
def calculaMedia(tipoFlor, vetor): # função para somar valores de cada atributo e tirar a média.
    contador = 0
    qtdeFlores = len(flores[tipoFlor]) # Armazena quantidade de flores de um determinado tipo
    while (contador<qtdeFlores):
        vetor[0] += flores[tipoFlor][contador][0]
        vetor[1] += flores[tipoFlor][contador][1]
        vetor[2] += flores[tipoFlor][contador][2]
        vetor[3] += flores[tipoFlor][contador][3]
        contador += 1
    vetor[0] /= qtdeFlores
    vetor[1] /= qtdeFlores
    vetor[2] /= qtdeFlores
    vetor[3] /= qtdeFlores
    return vetor
 
#Dicionário de flores. Cada tipo de flor é uma chave e seus valores são uma lista contendo outras listas com os dados das flores.
flores = {"Iris-setosa": [],
          "Iris-versicolor": [],
          "Iris-virginica": []}
 
for x in range(len(tabela)): # Percorre toda a tabela checando o último elemento, que contém o tipo da flor, e agrupando.
    if (tabela[x][4] == "Iris-setosa"):
        flores["Iris-setosa"].append(tabela[x][:-1])
    elif (tabela[x][4] == "Iris-versicolor"):
        flores["Iris-versicolor"].append(tabela[x][:-1])
    elif (tabela[x][4] == "Iris-virginica"):
        flores["Iris-virginica"].append(tabela[x][:-1])
 
media_setosa = [0,0,0,0]
media_versicolor = [0,0,0,0]
media_virginica = [0,0,0,0]
flor_desconhecida = [1,2,3,7] #Flor cujo tipo é desconhecido. Será comparada com as demais.
 
media_setosa = calculaMedia("Iris-setosa", media_setosa)
media_versicolor = calculaMedia("Iris-versicolor", media_versicolor)
media_virginica = calculaMedia("Iris-virginica", media_virginica)
 
""" Prints com médias de cada tipo
print("Setosa média: {}" .format(media_setosa))
print("Virginica média: {}" .format(media_virginica))
print("Versicolor média: {}" .format(media_versicolor))
"""
 
distancias = {"Iris-setosa": distanciaEuclidiana(flor_desconhecida, media_setosa),
              "Iris-virginica":distanciaEuclidiana(flor_desconhecida, media_versicolor),  
              "Iris-versicolor": distanciaEuclidiana(flor_desconhecida, media_virginica)}
             
print("A planta muito provavelmente é uma {}. Menor distância encontrada: {}".format(min(distancias, key=distancias.get), distancias[min(distancias, key=distancias.get)]))
distanciasOrdenadas = sorted(distancias.values())
 
aux = 1 #Contador auxiliar para o for abaixo
print("\nRanking:")
for distancia in distanciasOrdenadas:
  print("{}º {} - Distancia: {}".format(aux, list(distancias.keys())[list(distancias.values()).index(distancia)], distancia))
  aux += 1
